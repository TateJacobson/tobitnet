// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// LprimeC
NumericVector LprimeC(NumericVector xj, NumericVector y, LogicalVector d, NumericVector r, double gamma);
RcppExport SEXP _tobitnet_LprimeC(SEXP xjSEXP, SEXP ySEXP, SEXP dSEXP, SEXP rSEXP, SEXP gammaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type xj(xjSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type d(dSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type r(rSEXP);
    Rcpp::traits::input_parameter< double >::type gamma(gammaSEXP);
    rcpp_result_gen = Rcpp::wrap(LprimeC(xj, y, d, r, gamma));
    return rcpp_result_gen;
END_RCPP
}
// logL1
NumericVector logL1(NumericVector y, LogicalVector d, NumericVector r, double gamma);
RcppExport SEXP _tobitnet_logL1(SEXP ySEXP, SEXP dSEXP, SEXP rSEXP, SEXP gammaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type d(dSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type r(rSEXP);
    Rcpp::traits::input_parameter< double >::type gamma(gammaSEXP);
    rcpp_result_gen = Rcpp::wrap(logL1(y, d, r, gamma));
    return rcpp_result_gen;
END_RCPP
}
// tobitnet_innerC
List tobitnet_innerC(NumericMatrix xin, NumericVector yin, NumericVector cin, double lambda1, double lambda2, NumericVector pf1, NumericVector pf2, NumericVector delta_init, double delta_0_init, double gamma_init, double eps, bool standardize, double maxit);
RcppExport SEXP _tobitnet_tobitnet_innerC(SEXP xinSEXP, SEXP yinSEXP, SEXP cinSEXP, SEXP lambda1SEXP, SEXP lambda2SEXP, SEXP pf1SEXP, SEXP pf2SEXP, SEXP delta_initSEXP, SEXP delta_0_initSEXP, SEXP gamma_initSEXP, SEXP epsSEXP, SEXP standardizeSEXP, SEXP maxitSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type xin(xinSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type yin(yinSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type cin(cinSEXP);
    Rcpp::traits::input_parameter< double >::type lambda1(lambda1SEXP);
    Rcpp::traits::input_parameter< double >::type lambda2(lambda2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type pf1(pf1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type pf2(pf2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type delta_init(delta_initSEXP);
    Rcpp::traits::input_parameter< double >::type delta_0_init(delta_0_initSEXP);
    Rcpp::traits::input_parameter< double >::type gamma_init(gamma_initSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< bool >::type standardize(standardizeSEXP);
    Rcpp::traits::input_parameter< double >::type maxit(maxitSEXP);
    rcpp_result_gen = Rcpp::wrap(tobitnet_innerC(xin, yin, cin, lambda1, lambda2, pf1, pf2, delta_init, delta_0_init, gamma_init, eps, standardize, maxit));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_tobitnet_LprimeC", (DL_FUNC) &_tobitnet_LprimeC, 5},
    {"_tobitnet_logL1", (DL_FUNC) &_tobitnet_logL1, 4},
    {"_tobitnet_tobitnet_innerC", (DL_FUNC) &_tobitnet_tobitnet_innerC, 13},
    {NULL, NULL, 0}
};

RcppExport void R_init_tobitnet(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
